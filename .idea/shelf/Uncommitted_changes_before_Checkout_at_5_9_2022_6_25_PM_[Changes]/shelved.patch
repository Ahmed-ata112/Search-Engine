Index: Core/src/main/java/org/api/ApiMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.api;\r\n\r\nimport com.thedeanda.lorem.Lorem;\r\nimport com.thedeanda.lorem.LoremIpsum;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport org.bson.Document;\r\nimport org.mpack.MongoDB;\r\nimport org.mpack.QueryProcessor;\r\nimport org.mpack.Ranker;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.data.util.Pair;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport java.awt.*;\r\nimport java.io.FileNotFoundException;\r\nimport java.net.URI;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.PriorityQueue;\r\n\r\n@SpringBootApplication\r\npublic class ApiMain {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ApiMain.class, args);\r\n    }\r\n\r\n}\r\n\r\n\r\n@Getter\r\n@AllArgsConstructor\r\nclass Pojo {\r\n    private String url;\r\n    private String header;\r\n    private List<String> tokens;\r\n    private String paragraph;\r\n\r\n}\r\n\r\n@RestController\r\nclass Api {\r\n    final static MongoDB mongoDB = new MongoDB();\r\n\r\n    @GetMapping(value = \"/Query/{Qword}\")\r\n    public List<Pojo> queryProcessor(@PathVariable(value = \"Qword\") String SearchQ) throws FileNotFoundException {\r\n        List<Pojo> objectsList = new ArrayList<>();\r\n        //TODO: Remember to add The Word to The future Suggestions List\r\n\r\n\r\n        System.out.println(SearchQ);\r\n        mongoDB.addToSuggestionsArray(SearchQ);\r\n\r\n        QueryProcessor Q = new QueryProcessor();\r\n        HashMap<Integer, ArrayList<Document>> documents = Q.QueryProcessingFunction(SearchQ);\r\n        System.out.println(\"QUERY\");\r\n        System.out.println(documents);\r\n\r\n        Ranker R = new Ranker();\r\n        PriorityQueue<Pair<Pair<String, Pair<String, String>>, Pair<List<Integer>, Pair<Double, Double>>>> P = new PriorityQueue<>();\r\n        PriorityQueue<Pair<Pair<String, Pair<String, String>>, Pair<List<Integer>, Pair<Double, Double>>>> K = R.ranker(\"\", documents, P);\r\n        System.out.println(\"PRIORITY0\");\r\n        System.out.println(K);\r\n        System.out.println(\"PRIORITY1\");\r\n        System.out.println(P);\r\n        var ts = Q.GetSearchTokens();\r\n        for (var p : K) {\r\n            // p (   <url,pair<para,header>>     |                           )\r\n            var f = p.getFirst();\r\n            String url = f.getFirst();\r\n\r\n            var ss = f.getSecond();\r\n            String header = ss.getFirst();\r\n            String para = ss.getSecond();\r\n            Pojo p1 = new Pojo(url, header, ts, para);\r\n            objectsList.add(p1);\r\n        }\r\n        for (var p : P) {\r\n            // p (   <url,pair<para,header>>     |                           )\r\n            var f = p.getFirst();\r\n            String url = f.getFirst();\r\n            var ss = f.getSecond();\r\n            String header = ss.getFirst();\r\n            String para = ss.getSecond();\r\n            Pojo p1 = new Pojo(url, header, ts, para);\r\n            objectsList.add(p1);\r\n        }\r\n\r\n        return objectsList;\r\n    }\r\n\r\n    @GetMapping(value = \"/suggests\")\r\n    public List<String> getSuggestion() {\r\n        System.out.println(\"in sugg\");\r\n        return mongoDB.getSuggestionsArray();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Core/src/main/java/org/api/ApiMain.java b/Core/src/main/java/org/api/ApiMain.java
--- a/Core/src/main/java/org/api/ApiMain.java	(revision db2e875c5650170ccb938352f177c32e76812d00)
+++ b/Core/src/main/java/org/api/ApiMain.java	(date 1652113450823)
@@ -81,6 +81,7 @@
             objectsList.add(p1);
         }
         for (var p : P) {
+
             // p (   <url,pair<para,header>>     |                           )
             var f = p.getFirst();
             String url = f.getFirst();
